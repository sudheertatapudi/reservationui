{"version":3,"sources":["logo.svg","components/header.js","components/trains/trainlist.js","components/trains/trainsearch.js","actions/index.js","constants/action-types.js","components/trains/bookticket.js","components/flights/flightsearch.js","components/buses/bussearch.js","reducers/index.js","middleware/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","className","to","type","data-toggle","data-target","id","href","trainlist","connect","state","trains","map","train","key","trainnumber","name","available_seats","traveldate","departuretime","divStyle","marginTop","trainsearchConnect","props","fromstation","tostation","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","console","log","trainsearch","style","onSubmit","htmlFor","required","onChange","placeholder","Component","dispatch","fetch","then","response","json","payload","searchTrain","bookticket","match","params","trainname","flightsearch","bussearch","initialState","rootReducer","action","Object","assign","concat","middleware","next","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","exact","path","component","Trainsearch","FlightSearch","BusSearch","BookTicket","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c6ce3729.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nexport default function () {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n      <Link to=\"/\" className=\"navbar-brand\">\r\n        Reservation\r\n      </Link>\r\n      <button\r\n        type=\"button\"\r\n        className=\"navbar-toggler\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarCollapse\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link active\">\r\n              Trains\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/flights\" className=\"nav-link\">\r\n              Flights\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/buses\" className=\"nav-link\">\r\n              Buses\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"navbar-nav\">\r\n        <a href=\"#\" className=\"nav-item nav-link\">\r\n          Signup\r\n        </a>\r\n      </div>\r\n      <div className=\"navbar-nav\">\r\n        <a href=\"#\" className=\"nav-item nav-link\">\r\n          Login\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { trains: state.trains };\r\n};\r\n\r\nconst trainlistConnected = ({ trains }) => {\r\n\r\n  //let history = useHistory();\r\n\r\n  let bookTicket = (event) => {\r\n    //alert('Book ticket');\r\n    //history.push(\"/flights\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <table className=\"table table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th>Train No</th>\r\n            <th>Train Name</th>\r\n            <th>Available Seats</th>\r\n            <th>Travel Date</th>\r\n            <th>Departure Time</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {trains.map((train) => (\r\n          <tr key={train.trainnumber}>\r\n            <td>{train.trainnumber}</td>\r\n            <td>{train.name}</td>\r\n            <td>{train.available_seats}</td>\r\n            <td>{train.traveldate}</td>\r\n            <td>{train.departuretime}</td>\r\n            <td><NavLink to={`/bookticket/${train.trainnumber}/${train.name}/${train.traveldate}`}> Book Now </NavLink></td>\r\n          </tr>\r\n          \r\n        ))}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nconst trainlist = connect(mapStateToProps)(trainlistConnected);\r\n\r\nexport default trainlist;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchTrain } from \"../../actions/index\";\r\nimport Trainlist from \"./trainlist\";\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    trainsearch: (fromstation, tostation, traveldate) =>\r\n      dispatch(searchTrain(fromstation, tostation, traveldate)),\r\n  };\r\n}\r\nconst divStyle = {\r\n  marginTop:'30px'\r\n};\r\nclass trainsearchConnect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { fromstation: \"\", tostation: \"\", traveldate: \"\" };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { fromstation, tostation, traveldate } = this.state;\r\n    console.log(fromstation);\r\n    console.log(tostation);\r\n    console.log(traveldate);\r\n    this.props.trainsearch({ fromstation }, { tostation }, { traveldate });\r\n    //this.setState({ fromstation: \"\", tostation: \"\", traveldate: \"\" });\r\n    //this.props.history.push('/flights');\r\n  }\r\n\r\n  render() {\r\n    const { fromstation, tostation, traveldate } = this.state;\r\n    return (\r\n      <div className=\"container\" style= {divStyle}>\r\n        <form className=\"form-inline\" onSubmit={this.handleSubmit}>\r\n          <table className=\"table table-hover\">\r\n            <tr>\r\n              <td>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"fromStation\">From: </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"fromstation\"\r\n                    id=\"fromstation\"\r\n                    value={fromstation}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Enter From station\"\r\n                  ></input>\r\n                </div>\r\n              </td>\r\n\r\n              <td>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"tostation\">To: </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"tostation\"\r\n                    id=\"tostation\"\r\n                    value={tostation}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Enter To station\"\r\n                  ></input>\r\n                </div>\r\n              </td>\r\n\r\n              <td>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"traveldate\">Travel Date:</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    required\r\n                    type=\"date\"\r\n                    name=\"traveldate\"\r\n                    id=\"traveldate\"\r\n                    value={traveldate}\r\n                    onChange={this.handleChange}\r\n                  ></input>\r\n                </div>\r\n              </td>\r\n\r\n              <td>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Search\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </form>\r\n        <Trainlist/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst trainsearch = connect(null, mapDispatchToProps)(trainsearchConnect);\r\n\r\nexport default trainsearch;\r\n","import { TRAIN_SEARCH } from \"../constants/action-types\";\r\n\r\nexport function searchTrain(fromstation,tostation,traveldate) {\r\n    return function(dispatch) {\r\n      return fetch(`https://172.18.31.161:8080/trains/from/${fromstation.fromstation}/to/${tostation.tostation}/date/${traveldate.traveldate}`)\r\n        .then(response => {console.log(response)\r\n          return response.json()})\r\n        .then(json => {\r\n          dispatch({ type: TRAIN_SEARCH, payload: json });\r\n        });\r\n    };\r\n  }\r\n\r\n  \r\n  ","export const TRAIN_SEARCH = \"TRAIN_SEARCH\";","import React, { Component } from 'react'\r\n\r\nexport default class bookticket extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                book ticket page\r\n        <h3>{this.props.match.params.trainnumber}</h3>\r\n        <h4>{this.props.match.params.trainname}</h4>\r\n        <h4>{this.props.match.params.traveldate}</h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class flightsearch extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                Flight Search page\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class bussearch extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                Bus search page\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { TRAIN_SEARCH } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n    trains: []    \r\n  };\r\n  \r\n  function rootReducer(state = initialState, action) {\r\n\r\n    if (action.type === TRAIN_SEARCH) {\r\n        state = initialState\r\n        return Object.assign({}, state, {\r\n            trains: state.trains.concat(action.payload)\r\n        });\r\n      }\r\n\r\n    return state;\r\n  };\r\n  \r\n  export default rootReducer;","\r\n\r\nfunction middleware({ dispatch }) {\r\n    return function(next){\r\n      return function(action){\r\n        // do your stuff\r\n       \r\n        return next(action);\r\n      }\r\n    }\r\n  }\r\n\r\n  export default middleware;","import { createStore , applyMiddleware , compose } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport middleware from '../middleware/index';\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer,\r\n    storeEnhancers(applyMiddleware(middleware,thunk)) );\r\n\r\nexport default store;","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/header\";\nimport Trainlist from \"./components/trains/trainlist\";\nimport Trainsearch from \"./components/trains/trainsearch\";\nimport BookTicket from \"./components/trains/bookticket\";\nimport FlightSearch from \"./components/flights/flightsearch\";\nimport BusSearch from \"./components/buses/bussearch\";\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\nimport  {BrowserRouter as Router, Route , Switch} from 'react-router-dom';\nconst divStyle = {\n  marginTop:'30px'\n};\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n      <div className=\"App\">\n        <Header />\n\n        <div className=\"container-fluid\">\n\n          <Switch>\n            <Route exact path=\"/\" component={Trainsearch} />\n            <Route exact path=\"/flights\" component={FlightSearch} />\n            <Route exact path=\"/buses\" component={BusSearch} />\n            <Route exact path=\"/bookticket/:trainnumber/:trainname/:traveldate\" component={BookTicket} />\n          </Switch>\n\n        </div>\n\n      </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}